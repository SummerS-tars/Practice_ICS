ELF 头：
  Magic：   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00
  类别:                              ELF64
  数据:                              2 补码，小端序 (little endian)
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI 版本:                          0
  类型:                              DYN (Position-Independent Executable file)
  系统架构:                          Advanced Micro Devices X86-64
  版本:                              0x1
  入口点地址：               0x10a0
  程序头起点：          64 (bytes into file)
  Start of section headers:          14232 (bytes into file)
  标志：             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         14
  Size of section headers:           64 (bytes)
  Number of section headers:         31
  Section header string table index: 30

节头：
  [号] 名称              类型                 地址              偏移量     大小              全体大小          旗标   链接   信息   对齐
       
  [ 0]                   NULL             0000000000000000  00000000 0000000000000000  0000000000000000           0     0     0
       
  [ 1] .note.gnu.pr[...] NOTE             0000000000000350  00000350 0000000000000020  0000000000000000   A       0     0     8
       
  [ 2] .note.gnu.bu[...] NOTE             0000000000000370  00000370 0000000000000024  0000000000000000   A       0     0     4
       
  [ 3] .interp           PROGBITS         0000000000000394  00000394 000000000000001c  0000000000000000   A       0     0     1
       
  [ 4] .gnu.hash         GNU_HASH         00000000000003b0  000003b0 0000000000000028  0000000000000000   A       5     0     8
       
  [ 5] .dynsym           DYNSYM           00000000000003d8  000003d8 0000000000000138  0000000000000018   A       6     1     8
       
  [ 6] .dynstr           STRTAB           0000000000000510  00000510 00000000000000c6  0000000000000000   A       0     0     1
       
  [ 7] .gnu.version      VERSYM           00000000000005d6  000005d6 000000000000001a  0000000000000002   A       5     0     2
       
  [ 8] .gnu.version_r    VERNEED          00000000000005f0  000005f0 0000000000000030  0000000000000000   A       6     1     8
       
  [ 9] .rela.dyn         RELA             0000000000000620  00000620 00000000000000d8  0000000000000018   A       5     0     8
       
  [10] .rela.plt         RELA             00000000000006f8  000006f8 0000000000000090  0000000000000018  AI       5    24     8
       
  [11] .init             PROGBITS         0000000000001000  00001000 0000000000000017  0000000000000000  AX       0     0     4
       
  [12] .plt              PROGBITS         0000000000001020  00001020 0000000000000070  0000000000000010  AX       0     0     16
       
  [13] .plt.got          PROGBITS         0000000000001090  00001090 0000000000000008  0000000000000008  AX       0     0     8
       
  [14] .text             PROGBITS         00000000000010a0  000010a0 00000000000001ea  0000000000000000  AX       0     0     16
       
  [15] .fini             PROGBITS         000000000000128c  0000128c 0000000000000009  0000000000000000  AX       0     0     4
       
  [16] .rodata           PROGBITS         0000000000002000  00002000 0000000000000095  0000000000000000   A       0     0     8
       
  [17] .eh_frame_hdr     PROGBITS         0000000000002098  00002098 000000000000002c  0000000000000000   A       0     0     4
       
  [18] .eh_frame         PROGBITS         00000000000020c8  000020c8 00000000000000ac  0000000000000000   A       0     0     8
       
  [19] .note.ABI-tag     NOTE             0000000000002174  00002174 0000000000000020  0000000000000000   A       0     0     4
       
  [20] .init_array       INIT_ARRAY       0000000000003dc0  00002dc0 0000000000000008  0000000000000008  WA       0     0     8
       
  [21] .fini_array       FINI_ARRAY       0000000000003dc8  00002dc8 0000000000000008  0000000000000008  WA       0     0     8
       
  [22] .dynamic          DYNAMIC          0000000000003dd0  00002dd0 00000000000001f0  0000000000000010  WA       6     0     8
       
  [23] .got              PROGBITS             00002fc0 0000000000000028  0000000000000008  WA       0     0     8
       
  [24] .got.plt          PROGBITS         0000000000003fe8  00002fe8 0000000000000048  0000000000000008  WA       0     0     8
       
  [25] .data             PROGBITS         0000000000004030  00003030 0000000000000010  0000000000000000  WA       0     0     8
       
  [26] .bss              NOBITS           0000000000004040  00003040 0000000000000010  0000000000000000  WA       0     0     32
       
  [27] .comment          PROGBITS         0000000000000000  00003040 000000000000001f  0000000000000001  MS       0     0     1
       
  [28] .symtab           SYMTAB           0000000000000000  00003060 00000000000003f0  0000000000000018          29    18     8
       
  [29] .strtab           STRTAB           0000000000000000  00003450 000000000000022a  0000000000000000           0     0     1
       
  [30] .shstrtab         STRTAB           0000000000000000  0000367a 000000000000011a  0000000000000000           0     0     1
  
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), l (large), p (processor specific)

程序头：
  Type           Offset             VirtAddr           PhysAddr           FileSiz            MemSiz              Flags  Align
                 
  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040 0x0000000000000310 0x0000000000000310  R      0x8
                 
  INTERP         0x0000000000000394 0x0000000000000394 0x0000000000000394 0x000000000000001c 0x000000000000001c  R      0x1 
                 [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000 0x0000000000000788 0x0000000000000788  R      0x1000
                 
  LOAD           0x0000000000001000 0x0000000000001000 0x0000000000001000 0x0000000000000295 0x0000000000000295  R E    0x1000
                 
  LOAD           0x0000000000002000 0x0000000000002000 0x0000000000002000 0x0000000000000194 0x0000000000000194  R      0x1000
                 
  LOAD           0x0000000000002dc0 0x0000000000003dc0 0x0000000000003dc0 0x0000000000000280 0x0000000000000290  RW     0x1000
                 
  DYNAMIC        0x0000000000002dd0 0x0000000000003dd0 0x0000000000003dd0 0x00000000000001f0 0x00000000000001f0  RW     0x8
                 
  NOTE           0x0000000000000350 0x0000000000000350 0x0000000000000350 0x0000000000000020 0x0000000000000020  R      0x8
                 
  NOTE           0x0000000000000370 0x0000000000000370 0x0000000000000370 0x0000000000000024 0x0000000000000024  R      0x4
                 
  NOTE           0x0000000000002174 0x0000000000002174 0x0000000000002174 0x0000000000000020 0x0000000000000020  R      0x4
                 
  GNU_PROPERTY   0x0000000000000350 0x0000000000000350 0x0000000000000350 0x0000000000000020 0x0000000000000020  R      0x8
                 
  GNU_EH_FRAME   0x0000000000002098 0x0000000000002098 0x0000000000002098 0x000000000000002c 0x000000000000002c  R      0x4
                 
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000 0x0000000000000000 0x0000000000000000  RW     0x10
                 
  GNU_RELRO      0x0000000000002dc0 0x0000000000003dc0 0x0000000000003dc0 0x0000000000000240 0x0000000000000240  R      0x1
                 

 Section to Segment mapping:
  段节...
   00     
   01     .interp 
   02     .note.gnu.property .note.gnu.build-id .interp .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt 
   03     .init .plt .plt.got .text .fini 
   04     .rodata .eh_frame_hdr .eh_frame .note.ABI-tag 
   05     .init_array .fini_array .dynamic .got .got.plt .data .bss 
   06     .dynamic 
   07     .note.gnu.property 
   08     .note.gnu.build-id 
   09     .note.ABI-tag 
   10     .note.gnu.property 
   11     .eh_frame_hdr 
   12     
   13     .init_array .fini_array .dynamic .got 

Dynamic section at offset 0x2dd0 contains 27 entries:
  标记        类型                         名称/值
 0x0000000000000001 (NEEDED)             共享库：[libseries.so]
 0x0000000000000001 (NEEDED)             共享库：[libc.so.6]
 0x000000000000000c (INIT)               0x1000
 0x000000000000000d (FINI)               0x128c
 0x0000000000000019 (INIT_ARRAY)         0x3dc0
 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes)
 0x000000000000001a (FINI_ARRAY)         0x3dc8
 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)
 0x000000006ffffef5 (GNU_HASH)           0x3b0
 0x0000000000000005 (STRTAB)             0x510
 0x0000000000000006 (SYMTAB)             0x3d8
 0x000000000000000a (STRSZ)              198 (bytes)
 0x000000000000000b (SYMENT)             24 (bytes)
 0x0000000000000015 (DEBUG)              0x0
 0x0000000000000003 (PLTGOT)             0x3fe8
 0x0000000000000002 (PLTRELSZ)           144 (bytes)
 0x0000000000000014 (PLTREL)             RELA
 0x0000000000000017 (JMPREL)             0x6f8
 0x0000000000000007 (RELA)               0x620
 0x0000000000000008 (RELASZ)             216 (bytes)
 0x0000000000000009 (RELAENT)            24 (bytes)
 0x000000006ffffffb (FLAGS_1)            标志： PIE
 0x000000006ffffffe (VERNEED)            0x5f0
 0x000000006fffffff (VERNEEDNUM)         1
 0x000000006ffffff0 (VERSYM)             0x5d6
 0x000000006ffffff9 (RELACOUNT)          3
 0x0000000000000000 (NULL)               0x0